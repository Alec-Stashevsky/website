<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Alec Stashevsky</title>
    <link>https://alecstashevsky.com/post/</link>
      <atom:link href="https://alecstashevsky.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Alec Stashevsky 2021</copyright>
    <image>
      <url>https://alecstashevsky.com/media/content/authors/admin/avatar.jpg</url>
      <title>Blog</title>
      <link>https://alecstashevsky.com/post/</link>
    </image>
    
    <item>
      <title>Building my first R package</title>
      <link>https://alecstashevsky.com/post/building-my-first-r-package/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://alecstashevsky.com/post/building-my-first-r-package/</guid>
      <description>
&lt;script src=&#34;https://alecstashevsky.com/post/building-my-first-r-package/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://alecstashevsky.com/post/building-my-first-r-package/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://alecstashevsky.com/post/building-my-first-r-package/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://alecstashevsky.com/post/building-my-first-r-package/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Recently, I began working with time series and found myself searching for a way to build confidence intervals around certain statistics I was interested in, like a series’ median. Many time series do not follow a known probability distribution so my mind went directly to using a bootstrap to estimate a sample variance. Here’s what I learned:&lt;/p&gt;
&lt;div id=&#34;the-bootstrap-method&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Bootstrap Method&lt;/h2&gt;
&lt;p&gt;The bootstrap is a statistical technique used to infer characteristics of a population with a very limited set of assumptions about the sample data. The bootstrap does not require one to know (or guess) the underlying probability distribution of the data, and this is one of its greatest advantages. Using the bootstrap method, inference can be made without specifying any functional form. However, the assumptions that the regular bootstrap does require can be quite limiting in certain contexts like time series.&lt;/p&gt;
&lt;p&gt;These contexts often present problems when observations are not independent and identically distributed &lt;em&gt;(i.i.d.),&lt;/em&gt; a critical assumption of the regular bootstrap. The implications of the &lt;em&gt;i.i.d.&lt;/em&gt; assumption are quite strong. We can say that observations are &lt;em&gt;independent&lt;/em&gt; of eachother when the value of one observation has no effect on the value of other observations. This also means if we reorder the set of current observations this would have no effect on future observations, which is often not the case with time series.&lt;/p&gt;
&lt;p&gt;One example of this is a random survey of individuals’ height. Certainly, there are characteristics that can influence how tall a person may be, such as age - but ultimately as we collect survey responses, the height of one respondent should not have an effect on the height of other respondents. In this sense, we can say that our survey responses are &lt;em&gt;independent&lt;/em&gt; from each other. I will not go into all the implications of &lt;em&gt;i.i.d.&lt;/em&gt; assumptions here, but I will say that topic of natural characteristics such as human heights being &lt;em&gt;i.i.d.&lt;/em&gt; is full of nuance drawing out some of the implications such powerful statistical assumptions manufacture. If you would like to learn more, I encourage you to check out these posts on &lt;a href=&#34;https://www.johndcook.com/blog/2008/07/20/why-heights-are-normally-distributed/&#34;&gt;Why heights are normally distributed&lt;/a&gt; and &lt;a href=&#34;https://www.johndcook.com/blog/2008/07/20/why-heights-are-not-normally-distributed/&#34;&gt;Why heights are not normally distributed.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;why-i.i.d.-fails&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why &lt;em&gt;i.i.d.&lt;/em&gt; fails&lt;/h2&gt;
&lt;p&gt;Let’s continue our random survey of human heights. For the next few years, we send out the height questionnaire every year to each randomly-selected respondent from our original survey. The data from the survey each year will be compiled into &lt;em&gt;panel-data&lt;/em&gt; where respondents’ heights can now be tracked over a period of several years.&lt;/p&gt;
&lt;p&gt;We have more data than had we just conducted the first survey, so we should be able to make stronger inferences than before, right? Well, not exactly. If we begin to conduct inferences about all human heights (population characteristics) using this collection of panel-data, we fail to recognize the underlying connections that have been introduced.&lt;/p&gt;
&lt;p&gt;When we survey the same group of (originally) randomly-selected respondents each year, the height of a respondent this year should be related to their height in the previous year. Since humans generally grow in one direction we would expect the average height in our survey to only increase or stay relatively the same each year. This dynamic now violates our assumption of independence within the sample because each respondent’s answers will be connected. Panel-data and other types of data with inherent connections is characterized as &lt;em&gt;dependent data.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In practice, we could modify our survey design to target a different group of respondents each year removing such dependencies. However, this example illustrates a situation often encountered in time series analysis where processes are tracked over time and we cannot simply find unrelated processes within the data to help us answer questions about the original one.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In general, &lt;em&gt;i.i.d.&lt;/em&gt; assumptions fail for many types of time series because we would expect the observation in the previous period to have some explanatory power over the current observation. I refer to this phenomenon as &lt;em&gt;time-dependence,&lt;/em&gt; and it can could occur in many time series from unemployment rates, stock prices, biological data, etc. For example, we expect the water level of a river today to be somewhat close to the water level yesterday. The farther away from yesterday we go, the less related future water levels will be.&lt;/p&gt;
&lt;!-- I recently worked on interest rates, but I will illustrate this point using data from the [U.S. Geological Survey (USGS) National Water Information System (NWIS)](https://dashboard.waterdata.usgs.gov/app/nwd/?aoi=default/) measuring the peak-flow of rivers and streams. Peak-flow is measured in cubic feet/second (cfs). --&gt;
&lt;!-- The package `{dataRetrival}` makes it easy to import hydrological data from the EPA and USGS. Because I am partial to the Pacific Northwest, I will analyze peak-flow data from the Willamette River from the Portland, OR monitoring station. --&gt;
&lt;!-- # ```{r Water Data} --&gt;
&lt;!-- # Willamette River in Portland, OR --&gt;
&lt;!-- siteNo &lt;- &#34;14211720&#34; --&gt;
&lt;!-- pCode &lt;- &#34;00310&#34; --&gt;
&lt;!-- site &lt;- readNWISsite(siteNo) --&gt;
&lt;!-- peak.flow &lt;- readNWISpeak(siteNo) --&gt;
&lt;!-- ggplot(tail(peak.flow, nrow(peak.flow) - 2), aes(x = peak_dt, y = peak_va)) + --&gt;
&lt;p&gt;&lt;!-- geom_line() + --&gt;
&lt;!-- labs(x = &#34;Year&#34;, y = &#34;Peak-flow (cfs)&#34;) --&gt;&lt;/p&gt;
&lt;!-- ``` --&gt;
&lt;/div&gt;
&lt;div id=&#34;time-dependence&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Time-Dependence&lt;/h2&gt;
&lt;p&gt;We can visualize what the &lt;em&gt;i.i.d&lt;/em&gt; assumption looks like in time series by comparing time series with varying degrees of dependence on past observations. A time series that is completely &lt;em&gt;i.i.d.&lt;/em&gt; looks like white noise, since each observation is completely random. We can compare this to a simulated time series with various degrees of &lt;em&gt;time-dependence:&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Generate i.i.d. time series
white.noise &amp;lt;- ts(rnorm(500))

# Generate AR(1) simulation
ar1.series &amp;lt;- arima.sim(model = list(order = c(1, 0, 0),
  ar = 0.5), n = 500, rand.gen = rnorm)

# Generate AR(5) simulation
ar5.series &amp;lt;- arima.sim(model = list(order = c(5, 0, 0),
  ar = c(0.2, 0.2, 0.1, 0.1, 0.1)), n = 500)

# Combine with time period
series &amp;lt;- data.frame(
  &amp;quot;Time&amp;quot; = rep(1:500, 3),
  &amp;quot;Series&amp;quot; = factor(c(
    rep(&amp;quot;White Noise&amp;quot;, 500),
    rep(&amp;quot;AR(1)&amp;quot;, 500),
    rep(&amp;quot;AR(5)&amp;quot;, 500)),
    levels = c(&amp;quot;White Noise&amp;quot;, &amp;quot;AR(1)&amp;quot;, &amp;quot;AR(5)&amp;quot;)),
  &amp;quot;Value&amp;quot; = c(white.noise, ar1.series, ar5.series)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Behind the scenes, I plot these three time series:&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_Plotly.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The top panel illustrates a perfectly &lt;em&gt;i.i.d.&lt;/em&gt; time series, while the bottom two panels illustrate time series where each observation is somewhat dependent on the previous observations. These are called &lt;em&gt;autoregressive&lt;/em&gt; &lt;span class=&#34;math inline&#34;&gt;\(AR(p)\)&lt;/span&gt; processes of order &lt;span class=&#34;math inline&#34;&gt;\(p.\)&lt;/span&gt; The order of the &lt;span class=&#34;math inline&#34;&gt;\(AR\)&lt;/span&gt; process defines the number of prior observations &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; which have explanatory power over the current observation. The middle panel illustrates an &lt;span class=&#34;math inline&#34;&gt;\(AR(1)\)&lt;/span&gt; simulation, thus each observation depends on only the immediate prior observation. The bottom panel illustrates an &lt;span class=&#34;math inline&#34;&gt;\(AR(5)\)&lt;/span&gt; model with a higher autoregressive order where each observation is dependent on the previous five observations.&lt;/p&gt;
&lt;p&gt;To some extent we can see the degree of &lt;em&gt;time-dependence&lt;/em&gt; in each model. The top panel seems to oscillate much quicker and the periods of downward/upward trend are relatively short. If we compare this to the &lt;span class=&#34;math inline&#34;&gt;\(AR(1)\)&lt;/span&gt; model, somewhat more pronounced trends appear where observations are increasing or decreasing consistently for longer durations. In the &lt;span class=&#34;math inline&#34;&gt;\(AR(5)\)&lt;/span&gt; model, these trends seem even more drawn out. Though we can try to make visual comparisons because we understand the data-generating process behind these three time-series, in practice, this is often not the case and we must employ a battery of statistical tests to infer the degree of dependence — if any — within a given series.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-block-bootstrap&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Block Bootstrap&lt;/h2&gt;
&lt;p&gt;To get around this problem, we can retain some of this time-dependence by breaking-up a time series into a number of blocks with length &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt;. Instead of sampling each observation randomly (with replacement) as in a regular bootstrap, we can resample these &lt;em&gt;blocks&lt;/em&gt; at random. This way within each block the time-dependence is preserved. Below is a diagram from &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-article&#34; role=&#34;doc-biblioref&#34;&gt;El Anbari, Abeer, and Ptitsyn&lt;/a&gt; (&lt;a href=&#34;#ref-article&#34; role=&#34;doc-biblioref&#34;&gt;2015&lt;/a&gt;)&lt;/span&gt; on a common block bootstrap method, the &lt;em&gt;moving block bootstrap (MBB).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://alecstashevsky.com/post/building-my-first-r-package/index_files/figure-html/Block%20Bootstrap%20Diagram-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the moving block bootstrap, blocks are sampled from a set of overlapping blocks placed on top of the original time series. We can see this in the top panel where the yellow (5) and magenta (4) blocks both overlap with the cyan (2) block. In practice, a series of overlapping blocks will be laid over one another where each block increments one observation forward from the previous block, so that a total of &lt;span class=&#34;math inline&#34;&gt;\(n-l+1\)&lt;/span&gt; blocks of length &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; are laid over a time series with &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; observations.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; A block bootstrap of this scheme is known as &lt;em&gt;Künsch’s rule.&lt;/em&gt;&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The problem with the block bootstrap is the high sensitivity to the choice of block-length. If we decide to use blocks of half the length or double the length as depicted above, our bootstrap data may change dramatically and in turn any inference we perform.&lt;/p&gt;
&lt;p&gt;This was exactly the problem I ran into several weeks ago working with benchmark interest rates. My plan was to use &lt;code&gt;tseries::tsbootstrap()&lt;/code&gt; to block bootstrap the rates, but I found the results varied dramatically when I changed the block-length — and even worse — I had no reasoning to defend whatever block-length I selected.&lt;/p&gt;
&lt;!-- Add example to show how sensitive the block bootstrap is to block-length --&gt;
&lt;/div&gt;
&lt;div id=&#34;choosing-a-block-length&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Choosing a Block-Length&lt;/h2&gt;
&lt;p&gt;A hard-and-fast rule for the parameterization of block-length is still an unsolved problem; However, a variety of methods have been proposed in the econometric and statistical literature. I was able to find a selection of plug-in rules and algorithms to assess optimal blocks-lengths under various criteria.&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; In their seminal paper, &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-10.1093/biomet/82.3.561&#34; role=&#34;doc-biblioref&#34;&gt;Hall, Horowitz, and Jing&lt;/a&gt; (&lt;a href=&#34;#ref-10.1093/biomet/82.3.561&#34; role=&#34;doc-biblioref&#34;&gt;1995&lt;/a&gt;)&lt;/span&gt; show that the optimal asymptotic formula for block-length is proportional to &lt;span class=&#34;math inline&#34;&gt;\(n^{\frac{1}{k}}\)&lt;/span&gt; where &lt;span class=&#34;math inline&#34;&gt;\(k=\{3,4,5\}\)&lt;/span&gt; depending on the desired object of estimation.&lt;a href=&#34;#fn5&#34; class=&#34;footnote-ref&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt; Moreover, &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-10.1093/biomet/82.3.561&#34; role=&#34;doc-biblioref&#34;&gt;Hall, Horowitz, and Jing&lt;/a&gt; (&lt;a href=&#34;#ref-10.1093/biomet/82.3.561&#34; role=&#34;doc-biblioref&#34;&gt;1995&lt;/a&gt;)&lt;/span&gt; develop an empirically based algorithm to optimize the choice of block-length.&lt;/p&gt;
&lt;p&gt;This was exactly what I needed, but a bit searching around CRAN, GitHub, and STATA and SAS libraries came up with nothing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;enter-blocklength&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Enter &lt;code&gt;{blocklength}&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The goal of &lt;code&gt;{blocklength}&lt;/code&gt; is to simplify and automate the process of selecting a block-length to bootstrap dependent data. &lt;code&gt;{blocklength}&lt;/code&gt; is an R package with a set of functions to automatically select the optimal block-length for a bootstrap of suitable dependent data, such as &lt;em&gt;stationary&lt;/em&gt; time series or dependent spatial data.&lt;/p&gt;
&lt;p&gt;Currently, there are two methods available:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;hhj()&lt;/code&gt; takes its name from the &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-10.1093/biomet/82.3.561&#34; role=&#34;doc-biblioref&#34;&gt;Hall, Horowitz, and Jing&lt;/a&gt; (&lt;a href=&#34;#ref-10.1093/biomet/82.3.561&#34; role=&#34;doc-biblioref&#34;&gt;1995&lt;/a&gt;)&lt;/span&gt; “HHJ” method to select the optimal block-length using a cross-validation algorithm which minimizes the mean squared error &lt;span class=&#34;math inline&#34;&gt;\((MSE)\)&lt;/span&gt; incurred by the bootstrap at various block-lengths.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pwsd()&lt;/code&gt; takes its name from the &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-doi:10.1081/ETC-120028836&#34; role=&#34;doc-biblioref&#34;&gt;Politis and White&lt;/a&gt; (&lt;a href=&#34;#ref-doi:10.1081/ETC-120028836&#34; role=&#34;doc-biblioref&#34;&gt;2004&lt;/a&gt;)&lt;/span&gt; Spectral Density “PWSD” Plug-in method to select the optimal block-length using spectral density estimation via “flat-top” lag windows of &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-https://doi.org/10.1111/j.1467-9892.1995.tb00223.x&#34; role=&#34;doc-biblioref&#34;&gt;Politis and Romano&lt;/a&gt; (&lt;a href=&#34;#ref-https://doi.org/10.1111/j.1467-9892.1995.tb00223.x&#34; role=&#34;doc-biblioref&#34;&gt;1995&lt;/a&gt;)&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Under the hood, &lt;code&gt;hhj()&lt;/code&gt; uses the moving block bootstrap (MBB) procedure according to &lt;em&gt;Künsch’s rule,&lt;/em&gt; which resamples blocks from a set of overlapping sub-samples with a fixed block-length. However, the results of &lt;code&gt;hhj()&lt;/code&gt; may be generalized to other block bootstrap procedures such as the &lt;em&gt;stationary bootstrap&lt;/em&gt; of &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-doi:10.1080/01621459.1994.10476870&#34; role=&#34;doc-biblioref&#34;&gt;Politis and Romano&lt;/a&gt; (&lt;a href=&#34;#ref-doi:10.1080/01621459.1994.10476870&#34; role=&#34;doc-biblioref&#34;&gt;1994&lt;/a&gt;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Compared to &lt;code&gt;pwsd()&lt;/code&gt; ,  &lt;code&gt;hhj()&lt;/code&gt; is more computationally intensive as it relies on iterative resampling processes that optimize the &lt;span class=&#34;math inline&#34;&gt;\(MSE\)&lt;/span&gt; function over each possible block-length (or a select grid of block-lengths). &lt;code&gt;pwsd()&lt;/code&gt; is a simpler “plug-in” rule that uses the auto-correlations, auto-covariance, and the subsequent spectral density of the series to optimize the choice of block-length.&lt;/p&gt;
&lt;p&gt;Currently, only the HHJ and PWSD methods are implemented through these two functions, but I plan on adding additional block-selection methods such as the Jackknife-after-bootstrap (JAB) Nonparametric Plug-in method proposed by &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-LAHIRI2007292&#34; role=&#34;doc-biblioref&#34;&gt;S. N. Lahiri, Furukawa, and Lee&lt;/a&gt; (&lt;a href=&#34;#ref-LAHIRI2007292&#34; role=&#34;doc-biblioref&#34;&gt;2007&lt;/a&gt;)&lt;/span&gt;.&lt;a href=&#34;#fn6&#34; class=&#34;footnote-ref&#34; id=&#34;fnref6&#34;&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The package can be downloaded from my &lt;a href=&#34;https://github.com/Alec-Stashevsky/blocklength&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references csl-bib-body hanging-indent&#34;&gt;
&lt;div id=&#34;ref-article&#34; class=&#34;csl-entry&#34;&gt;
El Anbari, Mohammed, Abeer Fadda, and Andrey Ptitsyn. 2015. &lt;span&gt;“Confidence in Phase Definition for Periodicity in Genes Expression Time Series.”&lt;/span&gt; &lt;em&gt;PloS One&lt;/em&gt; 10 (July): e0131111. &lt;a href=&#34;https://doi.org/10.1371/journal.pone.0131111&#34;&gt;https://doi.org/10.1371/journal.pone.0131111&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-10.1093/biomet/82.3.561&#34; class=&#34;csl-entry&#34;&gt;
Hall, Peter, Joel L. Horowitz, and Bing-Yi Jing. 1995. &lt;span&gt;“&lt;span class=&#34;nocase&#34;&gt;On blocking rules for the bootstrap with dependent data&lt;/span&gt;.”&lt;/span&gt; &lt;em&gt;Biometrika&lt;/em&gt; 82 (3): 561–74. &lt;a href=&#34;https://doi.org/10.1093/biomet/82.3.561&#34;&gt;https://doi.org/10.1093/biomet/82.3.561&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-kunsch1989&#34; class=&#34;csl-entry&#34;&gt;
Künsch, Hans R. 1989. &lt;span&gt;“The Jackknife and the Bootstrap for General Stationary Observations.”&lt;/span&gt; &lt;em&gt;Ann. Statist.&lt;/em&gt; 17 (3): 1217–41. &lt;a href=&#34;https://doi.org/10.1214/aos/1176347265&#34;&gt;https://doi.org/10.1214/aos/1176347265&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-lahiri2003resampling&#34; class=&#34;csl-entry&#34;&gt;
Lahiri, S. K., and S. N. Lahiri. 2003. &lt;em&gt;Resampling Methods for Dependent Data&lt;/em&gt;. Springer Series in Statistics. Springer. &lt;a href=&#34;https://books.google.com/books?id=e4f8sqm439UC&#34;&gt;https://books.google.com/books?id=e4f8sqm439UC&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-LAHIRI2007292&#34; class=&#34;csl-entry&#34;&gt;
Lahiri, S. N., K. Furukawa, and Y.-D. Lee. 2007. &lt;span&gt;“A Nonparametric Plug-in Rule for Selecting Optimal Block Lengths for Block Bootstrap Methods.”&lt;/span&gt; &lt;em&gt;Statistical Methodology&lt;/em&gt; 4 (3): 292–321. https://doi.org/&lt;a href=&#34;https://doi.org/10.1016/j.stamet.2006.08.002&#34;&gt;https://doi.org/10.1016/j.stamet.2006.08.002&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-doi:10.1080/01621459.1994.10476870&#34; class=&#34;csl-entry&#34;&gt;
Politis, Dimitris N., and Joseph P. Romano. 1994. &lt;span&gt;“The Stationary Bootstrap.”&lt;/span&gt; &lt;em&gt;Journal of the American Statistical Association&lt;/em&gt; 89 (428): 1303–13. &lt;a href=&#34;https://doi.org/10.1080/01621459.1994.10476870&#34;&gt;https://doi.org/10.1080/01621459.1994.10476870&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-https://doi.org/10.1111/j.1467-9892.1995.tb00223.x&#34; class=&#34;csl-entry&#34;&gt;
———. 1995. &lt;span&gt;“Bias-Corrected Nonparametric Spectral Estimation.”&lt;/span&gt; &lt;em&gt;Journal of Time Series Analysis&lt;/em&gt; 16 (1): 67–103. &lt;a href=&#34;https://doi.org/10.1111/j.1467-9892.1995.tb00223.x&#34;&gt;https://doi.org/10.1111/j.1467-9892.1995.tb00223.x&lt;/a&gt;.
&lt;/div&gt;
&lt;div id=&#34;ref-doi:10.1081/ETC-120028836&#34; class=&#34;csl-entry&#34;&gt;
Politis, Dimitris N., and Halbert White. 2004. &lt;span&gt;“Automatic Block-Length Selection for the Dependent Bootstrap.”&lt;/span&gt; &lt;em&gt;Econometric Reviews&lt;/em&gt; 23 (1): 53–70. &lt;a href=&#34;https://doi.org/10.1081/ETC-120028836&#34;&gt;https://doi.org/10.1081/ETC-120028836&lt;/a&gt;.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Other common contexts for dependent data include spatial information such as topographical data or biological data, such as measuring biological oxygen demand &lt;em&gt;(BOD)&lt;/em&gt; levels in rivers.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;We assume that there are &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt; blocks of length &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; such that &lt;span class=&#34;math inline&#34;&gt;\(bl \sim n\)&lt;/span&gt; for simplicity.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;&lt;em&gt;See&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-kunsch1989&#34; role=&#34;doc-biblioref&#34;&gt;Künsch&lt;/a&gt; (&lt;a href=&#34;#ref-kunsch1989&#34; role=&#34;doc-biblioref&#34;&gt;1989&lt;/a&gt;)&lt;/span&gt;.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;For a thorough treatment of bootstrapping methods for dependent data and the selection of optimal block-length, &lt;em&gt;See&lt;/em&gt; &lt;span class=&#34;citation&#34;&gt;&lt;a href=&#34;#ref-lahiri2003resampling&#34; role=&#34;doc-biblioref&#34;&gt;S. K. Lahiri and Lahiri&lt;/a&gt; (&lt;a href=&#34;#ref-lahiri2003resampling&#34; role=&#34;doc-biblioref&#34;&gt;2003&lt;/a&gt;)&lt;/span&gt;.&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;Specifically, &lt;span class=&#34;math inline&#34;&gt;\(n^{\frac{1}{3}}, n^{\frac{1}{4}},\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(n^{\frac{1}{5}}\)&lt;/span&gt; are used in the estimation of bias or variance, the estimation of a one-sided distribution function, and the estimation of a two-sided distribution function, respectively.&lt;a href=&#34;#fnref5&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn6&#34;&gt;&lt;p&gt;Both &lt;code&gt;pwsd()&lt;/code&gt; and &lt;code&gt;hhj()&lt;/code&gt; have output corresponding ‘pwsd’ and ‘hhj’ class objects which may be passed into S3 plotting methods. The usage of this package will be discussed in a later post.&lt;a href=&#34;#fnref6&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
